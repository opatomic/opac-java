#!/bin/bash

handleErr() {
	echo "$(basename "$BASH_SOURCE"): Error on line $1" >&2; exit 1
}
trap 'handleErr $LINENO' ERR

git --version  > /dev/null 2>&1 || (echo "git must be installed" >&2 && exit 1)
[ "$(git rev-parse --is-inside-work-tree)" = "true" ] || (echo "not in git repo?" >&2 && exit 1)

MODCNT=$(git status --porcelain | wc -l)
if [ "$MODCNT" -ne 0 ]; then
	echo "There are $MODCNT changes. Must revert or check in changes."
	exit 1
fi

VERSION=$(cat version.txt)

VERSION=$(echo "$VERSION" | cut -d '-' -f1)
VER1=$(echo "$VERSION" | cut -d '.' -f1)
VER2=$(echo "$VERSION" | cut -d '.' -f2)
VER3=$(echo "$VERSION" | cut -d '.' -f3)
NEXTVER="$VER1.$VER2.$((VER3+1))"


# run a build to make sure there's no problems building
./build

# TODO: run tests here; do not proceed if they fail

echo "$NEXTVER" > version.txt

DOCSDIR="../docs"
rm -rf "${DOCSDIR:?}/"*
mkdir -p "$DOCSDIR"
# note: javadoc option "-source 8" is used as a bug workaround when also using -link
#       see: https://issues.apache.org/jira/browse/MJAVADOC-615
# note: $JD_FIX is used to fix a problem with search in generated java docs.
#       see: https://stackoverflow.com/questions/52326318/maven-javadoc-search-redirects-to-undefined-url
JD_FIX="<script>if(typeof useModuleDirectories !== 'undefined'){useModuleDirectories=false;}</script>"
javadoc -Xdoclint:none -notimestamp -link "https://docs.oracle.com/javase/7/docs/api/" -source 8 -header "opac-$NEXTVER" -d "$DOCSDIR" --allow-script-in-comments -bottom "$JD_FIX" -sourcepath ../src com.opatomic
git add -A "$DOCSDIR"

git add version.txt

git commit -m "increment version to v$NEXTVER"
git tag -a "v$NEXTVER" -m "v$NEXTVER"

echo "committed and tagged v$NEXTVER"

git push --follow-tags

